# Inherit and overwrite part of the config based on this config
_base_ = "./rtmdet_m_8xb32-300e_coco.py"

data_root = r"data/prop/"  # dataset root

train_batch_size_per_gpu = 4
train_num_workers = 2

max_epochs = 20
# RTMDet 训练过程分成 2 个 stage，第二个 stage 会切换数据增强 pipeline
stage2_num_epochs = 1
base_lr = 0.00008


metainfo = {
    "classes": (
        "5.png",
        "7.png",
        "90°侧面.png",
        "90°正侧.png",
        "SC-00  点缀特效.png",
        "SC-00  牛奶-1.png",
        "SC-00  牛奶-2.png",
        "SC-00  牛奶-3.png",
        "SC-00  牛奶.png",
        "SC-00  牛奶空瓶-1.png",
        "SC-00  牛奶空瓶.png",
        "SC-00 怒气.png",
        "SC-00 问号.png",
        "SC-00愤怒特效.png",
        "SC-00打结特效.png",
        "SC-00火焰特效.png",
        "SC-00骨头.png",
        "SC-01  右手拿泡泡枪.png",
        "SC-01 吹泡泡圈.png",
        "sc-01叹气符号.png",
        "sc-01声音符号.png",
        "sc-01猪小弟手里的树丛-1.png",
        "sc-01猪小弟手里的树丛.png",
        "sc-01猪小弟手里的蜂巢.png",
        "sc-01蜜蜂.png",
        "sc-02-1.png",
        "sc-02.png",
        "sc-02生气符号.png",
        "sc-02零食.png",
        "SC-03太阳叉腰.png",
        "SC-03太阳打哈欠.png",
        "SC-03太阳疲惫.png",
        "sc-04书和树林.png",
        "sc-04汗水.png",
        "SC-05  猪小弟手拿饼干.png",
        "sc-05问号.png",
        "sc-10.png",
        "sc-10睡眠符号.png",
        "sc-11.png",
        "sc-11汗+生气符号+强调线.png",
        "sc-12声音符号.png",
        "sc-12大叫符号.png",
        "sc-13翻开的书.png",
        "sc-14打开的书.png",
        "sc-15 zzz.png",
        "SC-15 闪光特效.png",
        "SC-15猪小弟手.png",
        "sc-17关闭书.png",
        "sc-17灯泡.png",
        "sc-24.png",
        "sc-24声音符号.png",
        "sc-25许愿石和瓶子.png",
        "SC-26.png",
        "sc-26猪小弟头像_.png",
        "sc-27.png",
        "sc-28 符号.png",
        "sc-28烟雾 无描边.png",
        "sc-30 声音符号.png",
        "sc-30 声音符号2.png",
        "sc-31大暖色披萨.png",
        "sc-31暖色食物.png",
        "sc-33-1.png",
        "sc-33.png",
        "sc-36.png",
        "sc-37.png",
        "sc-5声音符号.png",
        "sc-7 11 12.png",
        "sc-9.png",
        "sc04-剪刀_梳子_镜子.png",
        "SC04-娃娃.png",
        "SC05.png",
        "SC07.png",
        "SC18.png",
        "sc27装完许愿石的瓶子.png",
        "sc32菠萝.png",
        "一大盆面团.png",
        "一排西瓜.png",
        "三只小鱼.png",
        "三盒鱼饲料.png",
        "三问号.png",
        "书.png",
        "书翻背面拿起来.png",
        "书翻页.png",
        "书背面.png",
        "书背面打开.png",
        "倾倒的水壶.png",
        "光-1.png",
        "光.png",
        "冰淇凌.png",
        "剪刀 布袋.png",
        "剪刀.png",
        "勺子 四分之三.png",
        "勺子.png",
        "卷卷速度游过.png",
        "卷卷速度线.png",
        "发抖符号.png",
        "叫叫吓得起飞.png",
        "叫叫吓跑.png",
        "叫叫坐下.png",
        "叫叫坐下背面.png",
        "叫叫头像框.png",
        "叫叫好奇.png",
        "叫叫手里玩具.png",
        "叫叫抱桶.png",
        "叫叫拿水管.png",
        "叫叫礼物盒.png",
        "叫叫速度线.png",
        "叫叫面具-角度1.png",
        "叫叫面具-角度2.png",
        "叹气 sc-02.png",
        "吃剩的甜筒.png",
        "各种小鱼.png",
        "吵架符号.png",
        "图层 35.png",
        "地上纸袋_.png",
        "垃圾袋打开.png",
        "垃圾袋打结.png",
        "声音符号.png",
        "大伞2.png",
        "大伞3.png",
        "大伞4.png",
        "大伞5.png",
        "大伞打开.png",
        "太阳-1.png",
        "太阳.png",
        "太阳11.png",
        "太阳22.png",
        "太阳33.png",
        "太阳44.png",
        "太阳55.png",
        "太阳66.png",
        "太阳动作1.png",
        "太阳动作2.png",
        "太阳动作3.png",
        "太阳动作4.png",
        "太阳动作5.png",
        "太阳打喷嚏.png",
        "太阳拉提琴.png",
        "安全带2.png",
        "完整西瓜.png",
        "对视电光.png",
        "小伞1.png",
        "小伞2.png",
        "小伞3.png",
        "小伞4.png",
        "小心触电.png",
        "小鸟.png",
        "工牌正面 四分之三_.png",
        "工牌正面.png",
        "工牌示意.png",
        "帽子 修好.png",
        "帽子 破洞 扁的.png",
        "帽子 破洞_.png",
        "开心对话框.png",
        "形状 1430 拷贝.png",
        "彩带.png",
        "彩旗.png",
        "感叹号.png",
        "扇子.png",
        "手.png",
        "手帕.png",
        "手拿树枝.png",
        "手柄.png",
        "扫把.png",
        "抖动线.png",
        "抱玩具.png",
        "拿伞特效.png",
        "揉开的面条丝.png",
        "插头.png",
        "撞击.png",
        "撞击2.png",
        "放大镜.png",
        "无语脑泡框.png",
        "无语鸟.png",
        "时钟.png",
        "星星.png",
        "星星闪动.png",
        "月亮-1.png",
        "月亮.png",
        "木牌.png",
        "板子.png",
        "核.png",
        "桃花饼.png",
        "桌子.png",
        "梯子.png",
        "棒棒糖气球.png",
        "正常披萨 拷贝.png",
        "毛毛虫.png",
        "毛笔.png",
        "气泡.png",
        "气泡sc-29.png",
        "气泡框 2.png",
        "气泡框 拷贝 2.png",
        "气泡框.png",
        "气球-正常形态.png",
        "气球.png",
        "水.png",
        "水壶.png",
        "水枪-1.png",
        "水枪.png",
        "水枪2 拷贝.png",
        "水枪2.png",
        "水桶.png",
        "水气泡特效-1.png",
        "水气泡特效.png",
        "水流.png",
        "汗水.png",
        "泡泡枪.png",
        "洒落的面粉团_.png",
        "浇水.png",
        "温度帧.png",
        "溅起的水.png",
        "溅起的水滴.png",
        "溅起的雪.png",
        "满屏的面粉灰.png",
        "火堆.png",
        "火焰+气泡框.png",
        "火花.png",
        "灯泡.png",
        "点缀特效.png",
        "烟.png",
        "烟花.png",
        "烟花盒子1.png",
        "烟花盒子2.png",
        "烟雾-1.png",
        "烟雾-2.png",
        "烟雾.png",
        "烟雾泡泡.png",
        "熊手 2.png",
        "熊手.png",
        "爆炸.png",
        "爆炸盒子-1.png",
        "爆炸盒子.png",
        "爆米花特写.png",
        "爱心.png",
        "牛奶.png",
        "特效.png",
        "猪小弟-1.png",
        "猪小弟.png",
        "猪小弟头像框_.png",
        "猪小弟手.png",
        "猪小弟手里的玩具 撒落.png",
        "猪小弟手里的玩具.png",
        "猪小弟趴着侧面.png",
        "猪小弟面具.png",
        "玉米粒.png",
        "玩具-1.png",
        "玩具.png",
        "甜甜圈.png",
        "生日蛋糕.png",
        "生气符号.png",
        "电话.png",
        "电风扇.png",
        "画外音特效.png",
        "白花.png",
        "盖子.png",
        "相机-1.png",
        "相机.png",
        "眼泪.png",
        "矩形 3 拷贝.png",
        "矩形 3.png",
        "碗.png",
        "礼物.png",
        "福.png",
        "积木2.png",
        "空的面粉袋子.png",
        "笔.png",
        "筷.png",
        "箭头.png",
        "箱子1.png",
        "箱子2.png",
        "米饭.png",
        "糖堆.png",
        "糖果4.png",
        "纸团.png",
        "纸袋.png",
        "组 1.png",
        "组 21.png",
        "组 55.png",
        "组 56.png",
        "组 7.png",
        "组 86.png",
        "绿萝.png",
        "绿萝凋谢.png",
        "绿萝开花.png",
        "羽毛.png",
        "肉馅.png",
        "背景气氛线.png",
        "胡萝卜-1.png",
        "胡萝卜.png",
        "脑泡.png",
        "脑泡框和叫叫震惊.png",
        "臭袜子.png",
        "花篮子.png",
        "花花星星.png",
        "苍蝇.png",
        "苹果.png",
        "苹果3.png",
        "菜.png",
        "菜板1.png",
        "菜板2.png",
        "落在地上的网.png",
        "薯片.png",
        "虚拟背景111.png",
        "蛋糕.png",
        "蛋裂开一点点.png",
        "蝴蝶.png",
        "袜子书.png",
        "装着疙瘩状面粉的盆.png",
        "西瓜.png",
        "西瓜块.png",
        "西瓜皮1.png",
        "西瓜皮2.png",
        "语音特效.png",
        "车-侧面-开门.png",
        "车-侧面.png",
        "车-俯视.png",
        "车-正侧.png",
        "车2.png",
        "车轮印.png",
        "转场泡泡_.png",
        "较多的面粉团.png",
        "金币-1.png",
        "金币.png",
        "铃铛头像框_.png",
        "铃铛手.png",
        "铃铛拍照.png",
        "铲子 侧面.png",
        "铲子.png",
        "铲子速度线.png",
        "锅.png",
        "锅盖.png",
        "长裙.png",
        "闪点.png",
        "闪电符号.png",
        "问号.png",
        "问哈.png",
        "雕刻南瓜.png",
        "雪人.png",
        "震惊特效.png",
        "震惊特效眼眶.png",
        "震惊符号.png",
        "面.png",
        "面团小人.png",
        "面条机.png",
        "面条碗1.png",
        "面条碗2.png",
        "面粉团、面粉灰_.png",
        "面粉灰.png",
        "面粉袋.png",
        "音符.png",
        "风.png",
        "饭团.png",
        "饺子.png",
        "马桶.png",
        "魔方.png",
        "鱼粮.png",
        "鱼缸-1.png",
        "鱼缸.png",
        "鱼食.png",
        "鸡蛋、鸡窝.png",
        "黄油.png",
        "黑线.png",
        "鼻涕泡.png",
    ),
    "palette": [
        (100, 100, 100)
    ],
}
num_classes = len(metainfo["classes"])

train_dataloader = dict(
    batch_size=train_batch_size_per_gpu,
    num_workers=train_num_workers,
    dataset=dict(
        data_root=data_root,
        metainfo=metainfo,
        data_prefix=dict(img="train/"),
        ann_file="train.json",
    ),
)

val_dataloader = dict(
    dataset=dict(
        data_root=data_root,
        metainfo=metainfo,
        data_prefix=dict(img="val/"),
        ann_file="val.json",
    )
)

test_dataloader = val_dataloader

val_evaluator = dict(ann_file=data_root + "val.json")

test_evaluator = val_evaluator

model = dict(bbox_head=dict(num_classes=num_classes))

# learning rate
# 默认的学习率调度器是 warmup 1000，但是 cat 数据集太小了，需要修改 为 10 iter
param_scheduler = [
    dict(type="LinearLR", start_factor=1.0e-5, by_epoch=False, begin=0, end=10),
    dict(
        # use cosine lr from 10 to 20 epoch
        type="CosineAnnealingLR",
        eta_min=base_lr * 0.05,
        begin=max_epochs // 2,
        end=max_epochs,
        T_max=max_epochs // 2,
        by_epoch=True,
        convert_to_iter_based=True,
    ),
]

train_pipeline_stage2 = [
    dict(type="LoadImageFromFile", backend_args=None),
    dict(type="LoadAnnotations", with_bbox=True),
    dict(
        type="RandomResize", scale=(640, 640), ratio_range=(0.1, 2.0), keep_ratio=True
    ),
    dict(type="RandomCrop", crop_size=(640, 640)),
    dict(type="YOLOXHSVRandomAug"),
    dict(type="RandomFlip", prob=0.5),
    dict(type="Pad", size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(type="PackDetInputs"),
]

# optimizer
optim_wrapper = dict(
    _delete_=True,
    type="OptimWrapper",
    optimizer=dict(type="AdamW", lr=base_lr, weight_decay=0.05),
    paramwise_cfg=dict(norm_decay_mult=0, bias_decay_mult=0, bypass_duplicate=True),
)

default_hooks = dict(
    checkpoint=dict(
        interval=5, max_keep_ckpts=2, save_best="auto"  # only keep latest 2 checkpoints
    ),
    logger=dict(type="LoggerHook", interval=5),
)

custom_hooks = [
    dict(
        type="PipelineSwitchHook",
        switch_epoch=max_epochs - stage2_num_epochs,
        switch_pipeline=train_pipeline_stage2,
    )
]

# load COCO pre-trained weight
load_from = "../mmdet_checkpoints/rtmdet_m_8xb32-300e_coco_20220719_112220-229f527c.pth"

train_cfg = dict(type="EpochBasedTrainLoop", max_epochs=max_epochs, val_interval=1)
visualizer = dict(
    vis_backends=[dict(type="LocalVisBackend"), dict(type="TensorboardVisBackend")]
)
